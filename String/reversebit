/* Reverse bits of a given 32 bits unsigned integer.
Input: 00000010100101000001111010011100
Output: 0011100101111000001010010100000
*/



class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
        uint32_t rev = 0;
        for(uint8_t i = 0; i < 32; i++) {
            // Mask starting from bit 0 (+till bit 31)
            if (n & (1 << i))
                // If bit is set, set bits starting from bit 31 (till bit 0)
                rev |= (1 << (31 - i));
        }
        return rev;
    }
};
